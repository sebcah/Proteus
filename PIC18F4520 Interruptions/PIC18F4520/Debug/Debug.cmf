%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$Debug.obj
cinit CODE 0 192 192 A 1
intcode_body CODE 0 1A 1A 102 1
text0 CODE 0 11C 11C 68 1
text1 CODE 0 184 184 E 1
cstackCOMRAM COMRAM 1 1 1 1A 1
temp COMRAM 1 1B 1B 1 1
intcode CODE 0 8 8 E 1
$startup.obj
reset_vec CODE 0 0 0 4 1
end_init CODE 0 16 16 4 1
config CONFIG 0 300000 300000 E 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 80-5FF 1
SFR F80-FFF 1
BANK0 80-FF 1
BANK1 100-1FF 1
BANK2 200-2FF 1
BANK3 300-3FF 1
BANK4 400-4FF 1
BANK5 500-5FF 1
CONST 4-7 1
CONST 19C-7FFF 1
IDLOC 200000-200007 1
STACK 80-5FF 1
SMALLCONST 600-7FFF 1
CODE 4-7 1
CODE 19C-7FFF 1
BIGRAM 1C-5FF 1
COMRAM 1C-7F 1
EEDATA F00000-F000FF 1
MEDIUMCONST 600-7FFF 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$Debug.obj
8 intcode CODE >14:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/init.c
8 intcode CODE >5:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
1A intcode_body CODE >5:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
4C intcode_body CODE >7:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
50 intcode_body CODE >10:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
68 intcode_body CODE >11:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
6A intcode_body CODE >12:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
A0 intcode_body CODE >13:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
A2 intcode_body CODE >14:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
D0 intcode_body CODE >10:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
DE intcode_body CODE >16:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
E0 intcode_body CODE >18:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/interrupts.c
184 text1 CODE >3:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/init.c
184 text1 CODE >5:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/init.c
188 text1 CODE >9:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/init.c
18A text1 CODE >10:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/init.c
18C text1 CODE >11:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/init.c
18E text1 CODE >12:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/init.c
190 text1 CODE >14:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/init.c
11C text0 CODE >5:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/main.c
11C text0 CODE >6:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/main.c
120 text0 CODE >10:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/main.c
122 text0 CODE >11:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/main.c
13A text0 CODE >12:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/main.c
148 text0 CODE >11:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/main.c
156 text0 CODE >13:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/main.c
158 text0 CODE >14:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/main.c
170 text0 CODE >15:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/main.c
17E text0 CODE >14:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520/main.c
192 cinit CODE >1335:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\Debug.as
192 cinit CODE >1337:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\Debug.as
192 cinit CODE >1340:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\Debug.as
192 cinit CODE >1346:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\Debug.as
192 cinit CODE >1348:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\Debug.as
194 cinit CODE >1349:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\Debug.as
196 cinit CODE >1350:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\Debug.as
198 cinit CODE >1351:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\Debug.as
$startup.obj
16 end_init CODE >126:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\startup.as
0 text CODE >59:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\startup.as
0 text CODE >60:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\startup.as
0 text CODE >61:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\startup.as
0 text CODE >63:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\startup.as
16 init CODE >110:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\startup.as
0 reset_vec CODE >99:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\startup.as
0 reset_vec CODE >104:C:\MPlab_code\Proteus\PIC18F4520 Interruptions\PIC18F4520\Debug\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
CheckSwitchPressed@count 12 0 COMRAM 1 cstackCOMRAM Debug.obj
__Lmediumconst 0 0 MEDIUMCONST 0 mediumconst Debug.obj
__Hspace_0 30000E 0 ABS 0 - Debug.obj
__Hspace_1 1C 0 ABS 0 - Debug.obj
__Hspace_2 0 0 ABS 0 - Debug.obj
__CFG_IESO$OFF 0 0 ABS 0 - Debug.obj
__Hibigdata 0 0 CODE 0 ibigdata Debug.obj
__mediumconst 0 0 MEDIUMCONST 0 mediumconst startup.obj
__Heeprom_data 0 0 EEDATA 0 eeprom_data Debug.obj
__CFG_MCLRE$ON 0 0 ABS 0 - Debug.obj
__size_of_CheckSwitchPressed 0 0 ABS 0 - Debug.obj
__Lsmallconst 0 0 SMALLCONST 0 smallconst Debug.obj
___sp 0 0 STACK 2 stack startup.obj
_init 184 0 CODE 0 text1 Debug.obj
_main 11C 0 CODE 0 text0 Debug.obj
btemp 1B 0 COMRAM 1 temp Debug.obj
start 16 0 CODE 0 init startup.obj
__CFG_BOREN$OFF 0 0 ABS 0 - Debug.obj
__size_of_init 0 0 ABS 0 - Debug.obj
__size_of_main 0 0 ABS 0 - Debug.obj
__Hpowerup 16 0 CODE 0 powerup Debug.obj
__accesstop 80 0 ABS 0 - startup.obj
intlevel0 0 0 CODE 0 text startup.obj
intlevel1 0 0 CODE 0 text startup.obj
intlevel2 0 0 CODE 0 text startup.obj
intlevel3 0 0 CODE 0 text startup.obj
__LnvFARRAM 0 0 FARRAM 0 nvFARRAM Debug.obj
__CFG_EBTR0$OFF 0 0 ABS 0 - Debug.obj
__CFG_EBTR1$OFF 0 0 ABS 0 - Debug.obj
__CFG_EBTR2$OFF 0 0 ABS 0 - Debug.obj
__CFG_EBTR3$OFF 0 0 ABS 0 - Debug.obj
__CFG_EBTRB$OFF 0 0 ABS 0 - Debug.obj
__Hifardata 0 0 CODE 0 ifardata Debug.obj
__Hclrtext 0 0 ABS 0 clrtext Debug.obj
___inthi_sp 0 0 STACK 2 stack startup.obj
___intlo_sp 0 0 STACK 2 stack startup.obj
__Hintcode_body 0 0 ABS 0 intcode_body Debug.obj
__Lintsave_regs 0 0 BIGRAM 1 intsave_regs Debug.obj
__Hmediumconst 0 0 MEDIUMCONST 0 mediumconst Debug.obj
__Hintcodelo 16 0 CODE 0 intcodelo Debug.obj
_INTCON2bits FF1 0 ABS 0 - Debug.obj
__Lintcodelo 16 0 CODE 0 intcodelo Debug.obj
__CFG_FCMEN$OFF 0 0 ABS 0 - Debug.obj
start_initialization 192 0 CODE 0 cinit Debug.obj
__HnvFARRAM 0 0 FARRAM 0 nvFARRAM Debug.obj
___rparam_used 1 0 ABS 0 - Debug.obj
__CFG_WDTPS$32768 0 0 ABS 0 - Debug.obj
CheckSwitchPressed@flash_count 10 0 COMRAM 1 cstackCOMRAM Debug.obj
__Hbank0 0 0 ABS 0 bank0 Debug.obj
__Hbank1 0 0 ABS 0 bank1 Debug.obj
__Hbank2 0 0 ABS 0 bank2 Debug.obj
__Hbank3 0 0 ABS 0 bank3 Debug.obj
__Hbank4 0 0 ABS 0 bank4 Debug.obj
__Hbank5 0 0 ABS 0 bank5 Debug.obj
__Hcinit 0 0 ABS 0 cinit Debug.obj
__Hconst 0 0 CODE 0 const Debug.obj
__Hidata 0 0 CODE 0 idata Debug.obj
__Hidloc 0 0 IDLOC 0 idloc Debug.obj
__Hnvbit 0 0 COMRAM 1 nvbit Debug.obj
__Hparam 0 0 COMRAM 1 rparam Debug.obj
__Hrdata 0 0 COMRAM 1 rdata Debug.obj
__Hstack 0 0 STACK 2 stack Debug.obj
__Htext0 0 0 ABS 0 text0 Debug.obj
__Htext1 0 0 ABS 0 text1 Debug.obj
CheckSwitchPressed@count_353 14 0 COMRAM 1 cstackCOMRAM Debug.obj
__Hbigbss 0 0 BIGRAM 1 bigbss Debug.obj
__Hbigram 0 0 ABS 0 bigram Debug.obj
__smallconst 0 0 SMALLCONST 0 smallconst startup.obj
__Hcomram 0 0 ABS 0 comram Debug.obj
__Hconfig 30000E 0 CONFIG 0 config Debug.obj
__CFG_LPT1OSC$OFF 0 0 ABS 0 - Debug.obj
__Lbank0 0 0 ABS 0 bank0 Debug.obj
__Lbank1 0 0 ABS 0 bank1 Debug.obj
__Lbank2 0 0 ABS 0 bank2 Debug.obj
__Lbank3 0 0 ABS 0 bank3 Debug.obj
__Lbank4 0 0 ABS 0 bank4 Debug.obj
__Lbank5 0 0 ABS 0 bank5 Debug.obj
__Lcinit 0 0 ABS 0 cinit Debug.obj
__Lconst 0 0 CODE 0 const Debug.obj
__Lidata 0 0 CODE 0 idata Debug.obj
__Lidloc 0 0 IDLOC 0 idloc Debug.obj
main@count_112 19 0 COMRAM 1 cstackCOMRAM Debug.obj
__Lnvbit 0 0 COMRAM 1 nvbit Debug.obj
__Lparam 0 0 COMRAM 1 rparam Debug.obj
__Lrdata 0 0 COMRAM 1 rdata Debug.obj
__Lstack 0 0 STACK 2 stack Debug.obj
__Ltext0 0 0 ABS 0 text0 Debug.obj
__Ltext1 0 0 ABS 0 text1 Debug.obj
__Hfarbss 0 0 FARRAM 0 farbss Debug.obj
__Lintcode_body 0 0 ABS 0 intcode_body Debug.obj
_PORTBbits F81 0 ABS 0 - Debug.obj
_INTCONbits FF2 0 ABS 0 - Debug.obj
__Habs1 0 0 ABS 0 abs1 Debug.obj
__Hdata 0 0 ABS 0 data Debug.obj
__Hinit 16 0 CODE 0 init Debug.obj
__Hrbit 0 0 COMRAM 1 rbit Debug.obj
__Hrbss 0 0 COMRAM 1 rbss Debug.obj
__Htemp 1C 0 COMRAM 1 temp Debug.obj
__Htext 0 0 ABS 0 text Debug.obj
__Labs1 0 0 ABS 0 abs1 Debug.obj
__Ldata 0 0 ABS 0 data Debug.obj
__Linit 16 0 CODE 0 init Debug.obj
__Lrbit 0 0 COMRAM 1 rbit Debug.obj
__Lrbss 0 0 COMRAM 1 rbss Debug.obj
__Ltemp 1B 0 COMRAM 1 temp Debug.obj
__Ltext 0 0 ABS 0 text Debug.obj
__CFG_XINST$OFF 0 0 ABS 0 - Debug.obj
int$flags 1B 0 COMRAM 1 temp Debug.obj
__HcstackCOMRAM 0 0 ABS 0 cstackCOMRAM Debug.obj
__Hintret 0 0 ABS 0 intret Debug.obj
__Hirdata 0 0 CODE 0 irdata Debug.obj
__S0 30000E 0 ABS 0 - Debug.obj
__S1 1C 0 ABS 0 - Debug.obj
__S2 0 0 ABS 0 - Debug.obj
__CFG_PBADEN$OFF 0 0 ABS 0 - Debug.obj
__Lbigdata 0 0 BIGRAM 1 bigdata Debug.obj
__Hnvrram 0 0 COMRAM 1 nvrram Debug.obj
int_func 1A 0 CODE 0 intcode_body Debug.obj
__CFG_CCP2MX$PORTC 0 0 ABS 0 - Debug.obj
__Lintentry 0 0 ABS 0 intentry Debug.obj
__Hramtop 600 0 RAM 0 ramtop Debug.obj
__Hrparam 0 0 COMRAM 1 rparam Debug.obj
__activetblptr 0 0 ABS 0 - Debug.obj
__Hstruct 0 0 COMRAM 1 struct Debug.obj
__end_of_CheckSwitchPressed 11C 0 CODE 0 intcode_body Debug.obj
__pintcode_body 1A 0 CODE 0 intcode_body Debug.obj
__Lbigbss 0 0 BIGRAM 1 bigbss Debug.obj
__Lbigram 0 0 ABS 0 bigram Debug.obj
__CFG_BORV$3 0 0 ABS 0 - Debug.obj
__Lcomram 0 0 ABS 0 comram Debug.obj
__Lconfig 300000 0 CONFIG 0 config Debug.obj
__Lfarbss 0 0 FARRAM 0 farbss Debug.obj
main@count 17 0 COMRAM 1 cstackCOMRAM Debug.obj
__Lfardata 0 0 FARRAM 0 fardata Debug.obj
stackhi 5FF 0 ABS 0 - startup.obj
stacklo 80 0 ABS 0 - startup.obj
__Lintcode 8 0 CODE 0 intcode Debug.obj
__Lintret 0 0 ABS 0 intret Debug.obj
__Lirdata 0 0 CODE 0 irdata Debug.obj
_CheckSwitchPressed 8 0 CODE 0 intcode Debug.obj
__Lspace_0 0 0 ABS 0 - Debug.obj
__Lspace_1 0 0 ABS 0 - Debug.obj
__Lspace_2 0 0 ABS 0 - Debug.obj
__Lend_init 16 0 CODE 0 end_init Debug.obj
__CFG_LVP$ON 0 0 ABS 0 - Debug.obj
__LcstackCOMRAM 0 0 ABS 0 cstackCOMRAM Debug.obj
end_of_initialization 192 0 CODE 0 cinit Debug.obj
__Lnvrram 0 0 COMRAM 1 nvrram Debug.obj
__Hintentry 0 0 ABS 0 intentry Debug.obj
__CFG_STVREN$ON 0 0 ABS 0 - Debug.obj
__CFG_OSC$HS 0 0 ABS 0 - Debug.obj
__Hreset_vec 4 0 CODE 0 reset_vec Debug.obj
__Lramtop 600 0 RAM 0 ramtop Debug.obj
__Lrparam 0 0 COMRAM 1 rparam Debug.obj
__pcinit 192 0 CODE 0 cinit Debug.obj
__ptext0 11C 0 CODE 0 text0 Debug.obj
__ptext1 184 0 CODE 0 text1 Debug.obj
__Lstruct 0 0 COMRAM 1 struct Debug.obj
__ramtop 600 0 RAM 0 ramtop startup.obj
__Lpowerup 16 0 CODE 0 powerup Debug.obj
__Leeprom_data 0 0 EEDATA 0 eeprom_data Debug.obj
__Lreset_vec 0 0 CODE 0 reset_vec Debug.obj
___param_bank 10 0 ABS 0 - Debug.obj
__CFG_WDT$OFF 0 0 ABS 0 - Debug.obj
__Hbigdata 0 0 BIGRAM 1 bigdata Debug.obj
__end_of__initialization 192 0 CODE 0 cinit Debug.obj
__CFG_WRT0$OFF 0 0 ABS 0 - Debug.obj
__CFG_WRT1$OFF 0 0 ABS 0 - Debug.obj
__CFG_WRT2$OFF 0 0 ABS 0 - Debug.obj
__CFG_WRT3$OFF 0 0 ABS 0 - Debug.obj
__CFG_WRTB$OFF 0 0 ABS 0 - Debug.obj
__Libigdata 0 0 CODE 0 ibigdata Debug.obj
__CFG_WRTC$OFF 0 0 ABS 0 - Debug.obj
__CFG_WRTD$OFF 0 0 ABS 0 - Debug.obj
__Lclrtext 0 0 ABS 0 clrtext Debug.obj
__CFG_PWRT$OFF 0 0 ABS 0 - Debug.obj
__pcstackCOMRAM 1 0 COMRAM 1 cstackCOMRAM Debug.obj
__Hend_init 1A 0 CODE 0 end_init Debug.obj
__end_of_init 192 0 CODE 0 text1 Debug.obj
__end_of_main 184 0 CODE 0 text0 Debug.obj
__pintcode 8 0 CODE 0 intcode Debug.obj
_TRISB F93 0 ABS 0 - Debug.obj
__CFG_CP0$OFF 0 0 ABS 0 - Debug.obj
__CFG_CP1$OFF 0 0 ABS 0 - Debug.obj
__HRAM 0 0 ABS 0 - Debug.obj
__Hbss 0 0 RAM 1 bss Debug.obj
__Hram 0 0 ABS 0 ram Debug.obj
__Hsfr 0 0 ABS 0 sfr Debug.obj
__LRAM 1 0 ABS 0 - Debug.obj
__Lbss 0 0 RAM 1 bss Debug.obj
__Lram 0 0 ABS 0 ram Debug.obj
__Lsfr 0 0 ABS 0 sfr Debug.obj
__CFG_CP2$OFF 0 0 ABS 0 - Debug.obj
__CFG_CP3$OFF 0 0 ABS 0 - Debug.obj
__CFG_CPB$OFF 0 0 ABS 0 - Debug.obj
__CFG_CPD$OFF 0 0 ABS 0 - Debug.obj
__initialization 192 0 CODE 0 cinit Debug.obj
__Hfardata 0 0 FARRAM 0 fardata Debug.obj
__Hsmallconst 0 0 SMALLCONST 0 smallconst Debug.obj
__Lifardata 0 0 CODE 0 ifardata Debug.obj
__Hintsave_regs 0 0 BIGRAM 1 intsave_regs Debug.obj
__Hintcode 16 0 CODE 0 intcode Debug.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cstackCOMRAM 1 1 1 1B 1
reset_vec 0 0 0 4 1
intcode 0 8 8 194 1
config 0 300000 300000 E 1
